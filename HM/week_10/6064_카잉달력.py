# import math
#
# T = int(input())
# for _ in range(T):
#     M, N, x, y = map(int, input().split())
#
#     (m, n) = (0, 0)     # 카잉 연도 표시용 <m, n>
#     k = 0   # k번째 해
#     # 0으로 설정한 이유는 <x, y> == <1, 1>인 경우도 고려하기 위해(입력값으로 첫번째 해가 나올 수도 있음)
#
#     # 답이 나왔는지 안 나왔는지 확인용
#     # 시작은 False로 설정
#     is_answer = False
#
#     # <m, n> == <M, N>이 되면 달력의 마지막 해라서 while문 종료
#     while k <= math.lcm(M, N):
#         if m < M:
#             m += 1
#         else:
#             m = 1
#         if n < N:
#             n += 1
#         else:
#             n = 1
#         k += 1
#
#         if (m, n) == (x, y):
#             # 답을 구했으므로 True
#             is_answer = True
#             break
#
#     if is_answer:
#         print(k)
#     # 답이 없으므로 -1 출력
#     else:
#         print(-1)

# 위 코드는 시간초과 됨 >> 답은 나오긴함
# 첫번째해<1, 1>부터 시작해서 x, y는 각각 M, N이 된 이후 1로 초기화 / 다시 1씩 증가하다가 M, N되면 다시 1로 초기화
'''
M, N, x, y = 10, 12, 3, 9 인 경우
- 1번째 해 ~ 10번째 해 : <1, 1> ~ <10, 10>
- 11번째 해 : <1, 11> => x가 1로 초기화
- 12번째 해 : <2, 12>
- 13번째 해 : <3, 1> => y가 1로 초기화
- 14번째 해 ~ 20번째 해 : <4, 2> ~ <10, 8>
- 21번째 해 ~ 24번째 해 : <1, 9> ~ <4, 12>
- 25번째 해 ~ 30번째 해 : <5, 1> ~ <10, 6>
- 31번째 해 ~ 33번째 해 : <1, 7> ~ <3, 9>
>> x는 M의 배수 + 1인 해, y는 N의 배수 + 1인 해에 1로 초기화
>> k번째 해 : <x, y> = <k % M, k % N> (x == M or y == N인 경우 나머지가 0이 됨)
'''
# 구해야하는 값은 k
# x값을 고정한다고 했을 때 k는 x, x + M, x + M*2 ... 이런식으로 증가
# x = 3일때 k는 3, 13, 23, 33... >> 3번째 해, 13번째 해, 23번째 해...일때 x는 무조건 3
# 이 때 y = 9인 k를 구한다 할때 k % 12 == 9인 k를 찾으면 됨

# 그럼 언제까지 반복을 돌리면 되는가? M, N의 최소공배수까지(마지막 연도)
# 최소공배수 기준으로 주기가 반복
import math

T = int(input())
for _ in range(T):
    M, N, x, y = map(int, input().split())

    i = 0
    k = x
    LCM = math.lcm(M, N)

    is_answer = False
    while k <= LCM:
        # (k - y)가 N으로 나누어 떨어지면 y 조건을 만족하는 것
        # (y가 N일 경우, (k-N)%N == 0 이므로 k%N==0과 같은 의미)
        if (k - y) % N == 0:
            print(k)
            break
        k += M
    else:
        print(-1)
